[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "macrodata-refinement"
description = "A toolkit for refining, validating, and transforming macrodata"
readme = "README.md"
authors = [
    {name = "Mudit Bhargava", email = "muditbhargava666@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/muditbhargava66/macrodata-refinement"
Documentation = "https://macrodata-refinement.readthedocs.io/"
"Bug Tracker" = "https://github.com/muditbhargava66/macrodata-refinement/issues"
Source = "https://github.com/muditbhargava66/macrodata-refinement"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "mdr.__version__"}

[project.scripts]
mdr = "mdr.api.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.990",
    "flake8>=6.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "pre-commit>=2.20.0",
    "tabulate>=0.9.0",  # For benchmark script
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "nbsphinx>=0.8.9",
    "ipython>=8.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--doctest-modules --cov=mdr"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "numpy.*",
    "pandas.*",
    "h5py.*",
    "pyarrow.*",
    "pytest.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [".git", "__pycache__", "build", "dist"]